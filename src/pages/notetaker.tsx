import { useState } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import NavBar from "~/components/NavBar";
import { useSession } from "next-auth/react";
// import { api } from "~/utils/api";
import { api, type RouterOutputs } from "../utils/api";

const Home: NextPage = () => {

  return (
    <>
      <Head>
        <title>:x</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <NavBar />
        <section className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">Dis is page
          <Content />
        </div>
        </section>
      </main>
    </>
  );
};

export default Home;

type Topic = RouterOutputs["topic"]["getAll"][0];

const Content: React.FC = () => {
  const { data: sessionData } = useSession();
  const [selectedTopic, setSelectedTopic] = useState<Topic | null>(null)

  const {data: topics, refetch: refetchTopics} = api.topic.getAll.useQuery(
    undefined, 
      {
        enabled: sessionData?.user !== undefined,
      }
    );

    const createTopic = api.topic.create.useMutation({
      onSuccess: () => {
        void refetchTopics();
      }
    });

    // return <div>{JSON.stringify(topics)}</div>
    return (
      // <div className="mx-5 mt-5 grid grid-cols-4 gap-2">
      <div>
          <div className="px-2">
          <div className="col-span-3">
          <ul className="menu rounded-box w-56 bg-base-100 p-2">
          {topics?.map((topic) => (
            <li key={topic.id}>
              <a
                href="#"
                onClick={(evt) => {
                  evt.preventDefault();
                  setSelectedTopic(topic);
                }}
              >
                {topic.title}
              </a>
            </li>
          ))}
        </ul>
          <div className="divider"></div>
              <input
                type="text"
                placeholder="New Topic"
                className="input-bordered input input-sm w-full"
                onKeyDown={(e) => {
                  if (e.key === "Enter") {
                    createTopic.mutate({
                      title: e.currentTarget.value,
                    });
                    e.currentTarget.value = "";
                  }
                }}
              />
            </div>
          </div>
      </div>
    )
    
}